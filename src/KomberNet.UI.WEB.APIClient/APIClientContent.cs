// <auto-generated>
namespace KomberNet.UI.WEB.APIClient
{
    using System;
    using System.Threading.Tasks;
    using KangarooNet.UI.APIClient;
    using Refit;
    using KomberNet.UI.WEB.Models;

    public partial interface IOrganizationUserClient : IAPIClient
    {
        [Post("/api/OrganizationUserHandler/Post")]
        public Task<OrganizationUserHandlerResponse> PostAsync([Body] OrganizationUserHandlerRequest request);
    }

    public partial interface IOrganizationUserQueryClient : IAPIClient
    {
        [Get("/api/OrganizationUserQuery/GetEntity")]
        public Task<OrganizationUserQueryResponse> GetEntityAsync([Query] OrganizationUserQueryRequest request);
    }

    public partial interface IOrganizationUsersQueryClient : IAPIClient
    {
        [Get("/api/OrganizationUsersQuery/GetEntities")]
        public Task<OrganizationUsersQueryResponse> GetEntitiesAsync([Query] OrganizationUsersQueryRequest request);
    }

    public partial interface IOrganizationClient : IAPIClient
    {
        [Post("/api/OrganizationHandler/Post")]
        public Task<OrganizationHandlerResponse> PostAsync([Body] OrganizationHandlerRequest request);
    }

    public partial interface IOrganizationQueryClient : IAPIClient
    {
        [Get("/api/OrganizationQuery/GetEntity")]
        public Task<OrganizationQueryResponse> GetEntityAsync([Query] OrganizationQueryRequest request);
    }

    public partial interface IOrganizationsQueryClient : IAPIClient
    {
        [Get("/api/OrganizationsQuery/GetEntities")]
        public Task<OrganizationsQueryResponse> GetEntitiesAsync([Query] OrganizationsQueryRequest request);
    }

    public partial interface ICountryClient : IAPIClient
    {
        [Post("/api/CountryHandler/Post")]
        public Task<CountryHandlerResponse> PostAsync([Body] CountryHandlerRequest request);
    }

    public partial interface ICountryQueryClient : IAPIClient
    {
        [Get("/api/CountryQuery/GetEntity")]
        public Task<CountryQueryResponse> GetEntityAsync([Query] CountryQueryRequest request);
    }

    public partial interface ICountriesQueryClient : IAPIClient
    {
        [Get("/api/CountriesQuery/GetEntities")]
        public Task<CountriesQueryResponse> GetEntitiesAsync([Query] CountriesQueryRequest request);
    }

    public partial interface ICountrySummaryQueryClient : IAPIClient
    {
        [Get("/api/CountrySummaryQuery/GetEntity")]
        public Task<CountrySummaryQueryResponse> GetEntityAsync([Query] CountrySummaryQueryRequest request);
    }

    public partial interface ICountrySummariesQueryClient : IAPIClient
    {
        [Get("/api/CountrySummariesQuery/GetEntities")]
        public Task<CountrySummariesQueryResponse> GetEntitiesAsync([Query] CountrySummariesQueryRequest request);
    }

    public partial interface IAuthClient : IAPIClient
    {
        [Post("/api/Auth/InsertApplicationUser")]
        public Task<ApplicationUserInsertResponse> InsertApplicationUserAsync([Body] ApplicationUserInsertRequest request);

        [Post("/api/Auth/Login")]
        public Task<LoginResponse> LoginAsync([Body] LoginRequest request);

        [Post("/api/Auth/RefreshToken")]
        public Task<RefreshTokenResponse> RefreshTokenAsync([Body] RefreshTokenRequest request);

        [Post("/api/Auth/Logout")]
        public Task<LogoutResponse> LogoutAsync([Body] LogoutRequest request);

        [Post("/api/Auth/ChangePassword")]
        public Task<ChangePasswordResponse> ChangePasswordAsync([Body] ChangePasswordRequest request);
    }

}