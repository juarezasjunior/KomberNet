@using System.Collections.ObjectModel;
@using System.Reactive.Subjects;
@using System.Reactive.Linq;
@using System.Collections.Specialized;
@using System.Reactive;
@using KangarooNet.Domain.Entities;
@using KomberNet.UI.WEB.Framework.Pages;

@inherits BodyBase

@typeparam TSummariesQueryRequest
@typeparam TSummariesQueryResponse
@typeparam TSummary

@{
    base.BuildRenderTree(__builder);
}

<RadzenCard>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm">
                <RadzenLabel Text="@this.Localizer["Search_InputText"]" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <RadzenTextBox Placeholder="@this.SearchPlaceholder"
                               @bind-Value="@this.SearchInputText"
                               class="w-100" />
            </div>
            <div class="col-sm">
                <RadzenButton Text="@this.Localizer["Search_Button"]"
                              Click="@SearchAsync"
                              ButtonStyle="@Radzen.ButtonStyle.Secondary" />
            </div>
        </div>

        <br />

        @if (this.FilterCriteriaArea != null)
        {
            <RadzenCard Visible="IsShowingMoreFilter">
                <div class="container-fluid">
                    @FilterCriteriaArea
                </div>
            </RadzenCard>

            @if (this.IsShowingMoreFilter)
            {
                <br />
            }

            <div class="row justify-content-center">
                <div class="col-auto">
                    <RadzenButton Icon="@FilterIcon"
                              Text="@this.FilterDescription"
                              Size="@Radzen.ButtonSize.Small"
                              Click="() => this.IsShowingMoreFilter = !this.IsShowingMoreFilter"
                              ButtonStyle="@Radzen.ButtonStyle.Secondary" />
                </div>
            </div>
        }
    </div>
</RadzenCard>

@if (this.IsShowingFirstHundredResults)
{
    <RadzenButton ButtonStyle="Radzen.ButtonStyle.Warning"
              Size="Radzen.ButtonSize.ExtraSmall"
              Text="@string.Format(this.Localizer["Search_ShowingFirstHundredResults"], this.Take)"
              Click="@this.RemoveTakeAsync" />
}

<br />
<br />

<RadzenCard>
    <div class="container-fluid">
        <div class="row justify-content-end">
            <div class="col-auto">

                @{
                    var allActionButtons = this.SearchPage.ActionButtons.OrderBy(x => x.Sequence).ToList();
                    var firstThreeActionButtons = allActionButtons.Take(3);

                    foreach (var actionButton in firstThreeActionButtons)
                    {
                        <RadzenButton Text="@actionButton.Text"
                              Visible="@actionButton.IsVisible"
                              ButtonStyle="@Radzen.ButtonStyle.Primary"
                              Disabled="@(!actionButton.IsEnabled)"
                              Click="@actionButton.OnExecute" />
                    }

                    var moreActionButtons = allActionButtons.Skip(3);

                    if (moreActionButtons.Any())
                    {
                        <RadzenSplitButton Text="@this.Localizer["Button_MoreOptions"]" ButtonStyle="Radzen.ButtonStyle.Primary">

                            @foreach (var actionButton in moreActionButtons)
                            {
                                <RadzenSplitButtonItem Text="@actionButton.Text"
                                           Visible="@actionButton.IsVisible"
                                           Disabled="@(!actionButton.IsEnabled)"
                                           onclick="@actionButton.OnExecute" />
                            }

                        </RadzenSplitButton>
                    }
                }
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <hr />
            </div>
        </div>

        <RadzenDataGrid Data="@this.SearchPage.Results" TItem="TSummary" SelectionMode="Radzen.DataGridSelectionMode.Multiple" @bind-Value="@InternalSelectedResults"
                        RowSelect="@OnRowSelect" RowDeselect="@OnRowDeselect">
            <Columns>
                @SearchColumnsArea
            </Columns>
        </RadzenDataGrid>
    </div>
</RadzenCard>