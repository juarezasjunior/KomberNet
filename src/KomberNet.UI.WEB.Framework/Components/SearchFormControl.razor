@using System.Collections.ObjectModel;
@using System.Reactive.Subjects;
@using System.Reactive.Linq;
@using System.Collections.Specialized;
@using System.Reactive;
@using KomberNet.UI.WEB.Framework.Pages;

@inherits FormControl

@typeparam TSummariesGetRequest
@typeparam TSummariesGetResponse
@typeparam TSummary
@typeparam TValidator

@{
    base.BuildRenderTree(__builder);
}

<RadzenTemplateForm TItem="TSummariesGetRequest" Data="@this.SearchFormPage.Request" Submit="async () => await this.SearchAsync()">
    <RadzenCard>
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm">
                    <RadzenLabel Text="@this.Localizer["Search_InputText"]" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <RadzenTextBox Placeholder="@this.SearchPlaceholder"
                    @bind-Value="@this.SearchInputText"
                                   class="w-100" />
                </div>
                <div class="col-sm">
                    <RadzenButton Text="@this.Localizer["Search_Button"]"
                                  ButtonStyle="@Radzen.ButtonStyle.Secondary"
                                  ButtonType="Radzen.ButtonType.Submit" />
                </div>
            </div>

            <br />

            @if (this.FilterCriteria != null)
            {
                <RadzenCard Visible="IsShowingMoreFilter">
                    <div class="container-fluid">
                        @FilterCriteria
                    </div>
                </RadzenCard>

                @if (this.IsShowingMoreFilter)
                {
                    <br />
                }

                <div class="row justify-content-center">
                    <div class="col-auto">
                        <RadzenButton Icon="@FilterIcon"
                                      Text="@this.FilterDescription"
                                      Size="@Radzen.ButtonSize.Small"
                                      Click="() => this.IsShowingMoreFilter = !this.IsShowingMoreFilter"
                                      ButtonStyle="@Radzen.ButtonStyle.Secondary" />
                    </div>
                </div>
            }
        </div>
    </RadzenCard>
</RadzenTemplateForm>

@if (this.IsShowingFirstHundredResults)
{
    <RadzenButton ButtonStyle="Radzen.ButtonStyle.Warning"
                  Size="Radzen.ButtonSize.ExtraSmall"
                  Text="@string.Format(this.Localizer["Search_ShowingFirstHundredResults"], this.Take)"
                  Click="@this.RemoveTakeAsync" />
}

<br />
<br />

<RadzenCard>
    <ActionDataGridControl TItem="TSummary"
                           Data="@this.SearchFormPage.Results"
                           OnRowSelected="@this.SearchFormPage.OnResultSelected"
                           OnRowDeselected="@this.SearchFormPage.OnResultDeselected"
                           Columns="@Columns"
                           ActionButtons="@this.SearchFormPage.ActionButtons"/>
</RadzenCard>