@page "/login"
@using KomberNet.UI.WEB.Client.Auth;
@using KomberNet.UI.WEB.Models;

@inherits BasePage

@inject IAuthService authService;

<RadzenCard>

    <RadzenTemplateForm TItem="Login" Data="@this" Submit="async () => await this.LoginAsync()">

        <RadzenFormField class="w-100" Text="@this.Localizer["Login_Email"]">
            <RadzenTextBox Name="@nameof(this.Email)" @bind-Value="Email" />
            <RadzenRequiredValidator Component="@nameof(this.Email)" Popup="true" Text="@this.Localizer["Field_Required"]" />
            <RadzenEmailValidator Component="@nameof(this.Email)" Popup="true" Text="@this.Localizer["Field_InvalidEmail"]" />
        </RadzenFormField>

        <RadzenFormField class="w-100" Text="@this.Localizer["Login_Password"]">
            <RadzenPassword Name="@nameof(this.Password)" @bind-Value="Password" />
            <RadzenRequiredValidator Component="@nameof(this.Password)" Popup="true" Text="@this.Localizer["Field_Required"]" />
        </RadzenFormField>

        <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="@this.Localizer["Login_Button"]" />

    </RadzenTemplateForm>

</RadzenCard>

@code {
    private string FullName { get; set; }

    private string Email { get; set; }

    private string Password { get; set; }

    private async Task LoginAsync()
    {
        await this.authService.InsertApplicationUserAsync(new ApplicationUserInsertRequest()
            {
                FullName = this.FullName ?? this.Email,
                Email = this.Email,
                Password = this.Password,
            });

        var result = await this.authService.LoginAsync(new LoginRequest()
            {
                Email = this.Email,
                Password = this.Password,
            });
    }
}
